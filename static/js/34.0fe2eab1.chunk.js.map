{"version":3,"file":"static/js/34.0fe2eab1.chunk.js","mappings":"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","sources":["components/Button/Buton.style.js","components/Button/Buton.js","redux/contacts/contacts-selectors.js","components/ContactsList/ContactsList.style.js","components/ContactsList/ContactsList.js","components/ContactItem/ContactsItem.style.js","components/Modal/Modal.style.js","components/Modal/Modal.js","components/UpdateContact/UpdateContact.style.js","components/UpdateContact/UpdateContact.js","components/ContactItem/ContactItem.js","components/Filter/Filter.style.js","components/Filter/Filter.js","components/Section/Section.style.js","components/Section/Section.js","views/ContactsPage/ContactsPage.style.js","components/CreateContact/CreateContact.style.js","components/CreateContact/CreateContact.js","views/ContactsPage/ContactsPage.js"],"sourcesContent":["import styled from 'styled-components';\n\nconst ButtonStyled = styled.button`\n  padding: 10px 20px;\n\n  font-family: Quicksand, sans-serif;\n  font-size: 16px;\n  font-weight: 300;\n  color: #fff;\n  background-color: #1976d2;\n  border: 1px solid #fff;\n  cursor: pointer;\n  transition: background-color 250ms linear;\n\n  &:hover {\n    background-color: #1667b8;\n  }\n`;\n\nexport { ButtonStyled };\n","import React from 'react';\nimport { ButtonStyled } from './Buton.style';\n\nexport default function Button({ children, style }) {\n  return <ButtonStyled style={{ ...style }}>{children}</ButtonStyled>;\n}\n","import { createSelector } from '@reduxjs/toolkit';\n\nconst getAllContacts = state => state.contacts.items;\nconst getFilter = state => state.contacts.filter;\n\nconst getVisibleTodos = createSelector(\n  [getAllContacts, getFilter],\n  (todos, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return todos.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n\nconst contactsSelectors = {\n  getAllContacts,\n  getFilter,\n  getVisibleTodos,\n};\n\nexport default contactsSelectors;\n","import styled from 'styled-components';\n\nconst ListStyled = styled.ul`\n  width: 100%;\n`;\n\nconst ItemStyled = styled.li`\n  display: flex;\n  flex-wrap: wrap;\n  padding: 14px 0;\n  background: #00000050;\n`;\n\nconst SpanStyled = styled.span`\n  width: 45%;\n  text-align: center;\n  font-size: 32px;\n  color: #fff;\n`;\n\nexport { ListStyled, SpanStyled, ItemStyled };\n","import React from 'react';\nimport { ListStyled, SpanStyled, ItemStyled } from './ContactsList.style';\n\nexport default function ContactsList({ children }) {\n  return (\n    <ListStyled>\n      <ItemStyled>\n        <SpanStyled style={{ width: '10%' }}>№</SpanStyled>\n        <SpanStyled>Name</SpanStyled>\n        <SpanStyled>Phone number</SpanStyled>\n      </ItemStyled>\n      {children}\n    </ListStyled>\n  );\n}\n","import styled from 'styled-components';\n\nconst ItemStyled = styled.li`\n  position: relative;\n  display: flex;\n  flex-wrap: wrap;\n  background-color: #ffffff40;\n  color: #fff;\n\n  &:not(:last-child):after {\n    position: absolute;\n    top: 100%;\n    left: 50%;\n    transform: translateX(-50%);\n    content: '';\n    display: block;\n    width: 90%;\n    height: 2px;\n    background: linear-gradient(\n      160deg,\n      rgba(3, 0, 47, 1) 0%,\n      rgba(95, 27, 91, 1) 48%,\n      rgba(30, 54, 139, 1) 100%\n    );\n  }\n`;\n\nconst PositionInListStyled = styled.span`\n  padding: 14px;\n  width: 10%;\n  text-align: center;\n  font-size: 32px;\n`;\n\nconst NameStyled = styled.span`\n  padding: 14px;\n  width: 40%;\n  text-align: center;\n  font-size: 32px;\n`;\nconst NumberStyled = styled.span`\n  width: 40%;\n  font-size: 30px;\n  text-align: center;\n  padding: 14px;\n`;\n\nexport { ItemStyled, NameStyled, NumberStyled, PositionInListStyled };\n","const boxStyled = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  bgcolor: 'background.paper',\n  boxShadow: 24,\n  p: 4,\n};\n\nexport { boxStyled };\n","import React from 'react';\nimport Box from '@mui/material/Box';\nimport Modal from '@mui/material/Modal';\nimport { boxStyled } from './Modal.style';\n\nexport default function BasicModal({ handleClose, open, children }) {\n  return (\n    <div>\n      <Modal\n        disableScrollLock={true}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Box sx={boxStyled}>{children}</Box>\n      </Modal>\n    </div>\n  );\n}\n","import styled from 'styled-components';\n\nconst FormStyled = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst LabelContainerStyled = styled.div`\n  margin-bottom: 25px;\n`;\n\nconst LabelStyled = styled.label`\n  font-size: 24px;\n  &:not(:last-child) {\n    margin-right: 15px;\n  }\n`;\n\nconst InputStyled = styled.input`\n  margin-left: 5px;\n  padding: 6px 12px;\n  border: 1px solid rgba(0, 0, 0, 0.5);\n  border-radius: 4px;\n  outline: none;\n  font-size: 16px;\n\n  transition: border-color 100ms linear, box-shadow 100ms linear;\n  &:focus {\n    border-color: #79d4fd;\n    box-shadow: 0 0 0 0.2rem rgb(3 169 244 / 25%);\n  }\n`;\n\nexport { FormStyled, LabelStyled, InputStyled, LabelContainerStyled };\n","import { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { useUpdateContactMutation } from 'redux/contacts/contacts.api';\nimport {\n  FormStyled,\n  LabelStyled,\n  InputStyled,\n  LabelContainerStyled,\n} from './UpdateContact.style';\nimport Button from 'components/Button';\n\nexport default function CreateContact({ setOpen, id, oldName, oldNumber }) {\n  const [name, setName] = useState(oldName);\n  const [number, setNumber] = useState(oldNumber);\n\n  const [updateContact] = useUpdateContactMutation();\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    updateContact({ id, name, number });\n    reset();\n    setOpen(false);\n    toast.success('Сontact updated!');\n  }\n  function reset() {\n    setName('');\n    setNumber('');\n  }\n  function handleChange(e) {\n    switch (e.target.name) {\n      case 'name':\n        setName(e.target.value);\n        break;\n      case 'number':\n        setNumber(e.target.value);\n        break;\n      default:\n        return;\n    }\n  }\n  return (\n    <>\n      <FormStyled onSubmit={handleSubmit}>\n        <LabelContainerStyled>\n          <LabelStyled>\n            Name\n            <InputStyled\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={handleChange}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n            />\n          </LabelStyled>\n          <LabelStyled>\n            Phone\n            <InputStyled\n              type=\"tel\"\n              name=\"number\"\n              value={number}\n              onChange={handleChange}\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n            />\n          </LabelStyled>\n        </LabelContainerStyled>\n        <Button type=\"submit\" variant=\"contained\">\n          Update\n        </Button>\n      </FormStyled>\n    </>\n  );\n}\n","import { useState } from 'react';\nimport { useDeleteContactMutation } from 'redux/contacts/contacts.api';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport {\n  ItemStyled,\n  NumberStyled,\n  NameStyled,\n  PositionInListStyled,\n} from './ContactsItem.style';\nimport BasicModal from 'components/Modal/Modal';\nimport UpdateContact from 'components/UpdateContact';\nimport Button from '@mui/material/Button';\nimport ButtonGroup from '@mui/material/ButtonGroup';\n\nexport default function ContactItem({ name, number, id, position }) {\n  const [deleteContact] = useDeleteContactMutation();\n  const [open, setOpen] = useState(false);\n  const handleModalOpen = () => setOpen(true);\n  const handleModalClose = () => setOpen(false);\n\n  return (\n    <ItemStyled>\n      <PositionInListStyled>{position + 1}</PositionInListStyled>\n      <NameStyled>{name}</NameStyled>\n      <NumberStyled>{number}</NumberStyled>\n      <ButtonGroup\n        style={{ width: '10%', backgroundColor: '', borderRadius: '0' }}\n      >\n        <Button onClick={handleModalOpen}>\n          <EditIcon />\n        </Button>\n        <Button onClick={() => deleteContact(id)}>\n          <DeleteIcon />\n        </Button>\n      </ButtonGroup>\n      <BasicModal open={open} handleClose={handleModalClose}>\n        <UpdateContact\n          setOpen={setOpen}\n          id={id}\n          oldName={name}\n          oldNumber={number}\n        ></UpdateContact>\n      </BasicModal>\n    </ItemStyled>\n  );\n}\n","import styled from 'styled-components';\n\nconst LabelStyled = styled.label`\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  margin-bottom: 10px;\n  font-size: 24px;\n  color: #fff;\n`;\n\nconst InputStyled = styled.input`\n  margin-left: 15px;\n`;\n\nexport { LabelStyled, InputStyled };\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport contactsSelectors from 'redux/contacts/contacts-selectors';\nimport { changeFilter } from 'redux/contacts/contacts-slice';\nimport { LabelStyled, InputStyled } from './Filter.style';\n\nexport default function Filter() {\n  const value = useSelector(contactsSelectors.getFilter);\n  const dispatch = useDispatch();\n  return (\n    <LabelStyled>\n      Find contacts by name\n      <InputStyled\n        type=\"text\"\n        value={value}\n        onChange={e => dispatch(changeFilter(e.currentTarget.value))}\n      />\n    </LabelStyled>\n  );\n}\n","import s from 'styled-components';\n\nconst SectionStyled = s.section`\npadding: 30px 0`;\n\nexport { SectionStyled };\n","import React from 'react';\nimport { SectionStyled } from './Section.style';\n\nexport default function Section({ children, style }) {\n  return <SectionStyled style={{ ...style }}>{children}</SectionStyled>;\n}\n","import styled from 'styled-components';\n\nconst ContainerListStyled = styled.div``;\n\nconst NoContactsStyled = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst NoContactsImageStyled = styled.img`\n  width: 220px;\n  margin-top: 25px;\n`;\nconst NoContactsText = styled.span`\n  margin-top: 45px;\n  font-size: 38px;\n  color: #fff;\n`;\nexport {\n  ContainerListStyled,\n  NoContactsStyled,\n  NoContactsImageStyled,\n  NoContactsText,\n};\n","import styled from 'styled-components';\n\nconst FormStyled = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst LabelContainerStyled = styled.div`\n  margin-bottom: 25px;\n`;\n\nconst LabelStyled = styled.label`\n  font-size: 24px;\n  &:not(:last-child) {\n    margin-right: 15px;\n  }\n`;\n\nconst InputStyled = styled.input`\n  margin-left: 5px;\n  padding: 6px 12px;\n  border: 1px solid rgba(0, 0, 0, 0.5);\n  border-radius: 4px;\n  outline: none;\n  font-size: 16px;\n\n  transition: border-color 100ms linear, box-shadow 100ms linear;\n  &:focus {\n    border-color: #79d4fd;\n    box-shadow: 0 0 0 0.2rem rgb(3 169 244 / 25%);\n  }\n`;\n\nexport { FormStyled, LabelStyled, InputStyled, LabelContainerStyled };\n","import { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { useCreateContactMutation } from 'redux/contacts/contacts.api';\nimport {\n  FormStyled,\n  LabelStyled,\n  InputStyled,\n  LabelContainerStyled,\n} from './CreateContact.style';\nimport Button from 'components/Button';\n\nexport default function CreateContact({ setOpen }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const [createContact] = useCreateContactMutation();\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    createContact({ name, number });\n    reset();\n    setOpen(false);\n    toast.success('Contact successfully added to your list!');\n  }\n  function reset() {\n    setName('');\n    setNumber('');\n  }\n  function handleChange(e) {\n    switch (e.target.name) {\n      case 'name':\n        setName(e.target.value);\n        break;\n      case 'number':\n        setNumber(e.target.value);\n        break;\n      default:\n        return;\n    }\n  }\n  return (\n    <>\n      <FormStyled onSubmit={handleSubmit}>\n        <LabelContainerStyled>\n          <LabelStyled>\n            Name\n            <InputStyled\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={handleChange}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n              placeholder=\"Sylvester Block\"\n            />\n          </LabelStyled>\n          <LabelStyled>\n            Phone\n            <InputStyled\n              type=\"tel\"\n              name=\"number\"\n              value={number}\n              onChange={handleChange}\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n              placeholder=\"777-777-7777\"\n            />\n          </LabelStyled>\n        </LabelContainerStyled>\n        <Button type=\"submit\" variant=\"contained\">\n          Create\n        </Button>\n      </FormStyled>\n    </>\n  );\n}\n","import { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport contactsSelectors from 'redux/contacts/contacts-selectors';\nimport { useGetContactsQuery } from 'redux/contacts/contacts.api';\nimport ContactsList from 'components/ContactsList';\nimport ContactItem from 'components/ContactItem';\nimport Filter from 'components/Filter';\nimport Section from 'components/Section';\nimport { Container } from '@mui/material';\nimport {\n  ContainerListStyled,\n  NoContactsStyled,\n  NoContactsImageStyled,\n  NoContactsText,\n} from './ContactsPage.style';\nimport Fab from '@mui/material/Fab';\nimport AddIcon from '@mui/icons-material/Add';\nimport BasicModal from 'components/Modal/Modal';\nimport CreateContact from 'components/CreateContact';\nimport ContactsBookImage from 'image/book-contacts.png';\n\nexport default function ContactsPage() {\n  const [open, setOpen] = useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  const filter = useSelector(contactsSelectors.getFilter);\n\n  const { data: contacts, isLoading } = useGetContactsQuery();\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter?.toLowerCase();\n    return contacts?.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  return (\n    <Section\n      style={{\n        backgroundImage: `linear-gradient(160deg, rgba(3,0,47,1) 0%, rgba(27,41,95,1) 48%, rgba(29,44,98,1) 100%)`,\n        minHeight: '100vh',\n        paddingTop: '120px',\n      }}\n    >\n      <Container>\n        <Filter />\n        <ContainerListStyled>\n          <ContactsList>\n            {contacts && !isLoading && getVisibleContacts()?.length > 0 ? (\n              getVisibleContacts().map(({ id, name, number }, index) => {\n                return (\n                  <ContactItem\n                    key={id}\n                    name={name}\n                    number={number}\n                    id={id}\n                    position={index}\n                  />\n                );\n              })\n            ) : (\n              <NoContactsStyled>\n                <NoContactsText>You have no contacts...</NoContactsText>\n                <NoContactsImageStyled\n                  src={ContactsBookImage}\n                  alt=\"contacts book\"\n                />\n              </NoContactsStyled>\n            )}\n          </ContactsList>\n        </ContainerListStyled>\n        <Fab\n          onClick={handleOpen}\n          color=\"secondary\"\n          aria-label=\"add\"\n          style={{\n            position: 'fixed',\n            top: '85%',\n            left: '85%',\n          }}\n        >\n          <AddIcon />\n        </Fab>\n      </Container>\n\n      <BasicModal open={open} handleClose={handleClose}>\n        <CreateContact setOpen={setOpen} />\n      </BasicModal>\n    </Section>\n  );\n}\n"],"names":["ButtonStyled","styled","Button","children","style","getAllContacts","state","contacts","items","getFilter","filter","getVisibleTodos","createSelector","todos","normalizedFilter","toLowerCase","name","includes","ListStyled","ItemStyled","SpanStyled","ContactsList","width","PositionInListStyled","NameStyled","NumberStyled","boxStyled","position","top","left","transform","bgcolor","boxShadow","p","BasicModal","handleClose","open","Modal","disableScrollLock","onClose","Box","sx","FormStyled","LabelContainerStyled","LabelStyled","InputStyled","CreateContact","setOpen","id","oldName","oldNumber","useState","setName","number","setNumber","useUpdateContactMutation","updateContact","handleChange","e","target","value","onSubmit","preventDefault","toast","type","onChange","pattern","title","required","variant","ContactItem","useDeleteContactMutation","deleteContact","ButtonGroup","backgroundColor","borderRadius","onClick","Edit","Delete","Filter","useSelector","contactsSelectors","dispatch","useDispatch","changeFilter","currentTarget","SectionStyled","s","Section","ContainerListStyled","NoContactsStyled","NoContactsImageStyled","NoContactsText","useCreateContactMutation","createContact","placeholder","ContactsPage","useGetContactsQuery","data","isLoading","getVisibleContacts","backgroundImage","minHeight","paddingTop","Container","length","map","index","src","ContactsBookImage","alt","Fab","color","Add"],"sourceRoot":""}